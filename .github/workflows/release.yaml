name: build-and-release

on:
  # run it manually
  workflow_dispatch:

jobs:

  build-Linux-musl:
    name: build-Linux-musl (${{ github.ref_name }})
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Cross Build Static cURL
        env:
          CURL_VERSION: ${{ vars.CURL_VERSION }}
          TLS_LIB: ${{ vars.TLS_LIB }}
          QUICTLS_VERSION: ${{ vars.QUICTLS_VERSION }}
          OPENSSL_VERSION: ${{ vars.OPENSSL_VERSION }}
          NGTCP2_VERSION: ${{ vars.NGTCP2_VERSION }}
          NGHTTP3_VERSION: ${{ vars.NGHTTP3_VERSION }}
          NGHTTP2_VERSION: ${{ vars.NGHTTP2_VERSION }}
          LIBIDN2_VERSION: ${{ vars.LIBIDN2_VERSION }}
          LIBUNISTRING_VERSION: ${{ vars.LIBUNISTRING_VERSION }}
          ZLIB_VERSION: ${{ vars.ZLIB_VERSION }}
          BROTLI_VERSION: ${{ vars.BROTLI_VERSION }}
          ZSTD_VERSION: ${{ vars.ZSTD_VERSION }}
          LIBSSH2_VERSION: ${{ vars.LIBSSH2_VERSION }}
          ARES_VERSION: ${{ vars.ARES_VERSION }}
          ENABLE_TRURL: ${{ vars.ENABLE_TRURL }}
          TRURL_VERSION: ${{ vars.TRURL_VERSION }}
          LIBC: musl
          CONTAINER_IMAGE: debian:latest
          TOKEN_READ: ${{ secrets.GITHUB_TOKEN }}
          ARCHES: "i686"
        run: |
          ARCHES="${ARCHES}"
          CURL_VERSION=${CURL_VERSION}
          TLS_LIB=${TLS_LIB}
          QUICTLS_VERSION=${QUICTLS_VERSION}
          OPENSSL_VERSION=${OPENSSL_VERSION}
          NGTCP2_VERSION=${NGTCP2_VERSION}
          NGHTTP3_VERSION=${NGHTTP3_VERSION}
          NGHTTP2_VERSION=${NGHTTP2_VERSION}
          LIBIDN2_VERSION=${LIBIDN2_VERSION}
          LIBUNISTRING_VERSION=${LIBUNISTRING_VERSION}
          ZLIB_VERSION=${ZLIB_VERSION}
          BROTLI_VERSION=${BROTLI_VERSION}
          ZSTD_VERSION=${ZSTD_VERSION}
          LIBSSH2_VERSION=${LIBSSH2_VERSION}
          ARES_VERSION=${ARES_VERSION}
          ENABLE_TRURL=${ENABLE_TRURL}
          TRURL_VERSION=${TRURL_VERSION}
          LIBC=${LIBC}
          CONTAINER_IMAGE=${CONTAINER_IMAGE}
          TOKEN_READ=${TOKEN_READ}
          sh curl-static-cross.sh

      - name: Set up environment
        run: |
          VERSION=`cat release/version.txt`
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Upload artifact (version)
        uses: actions/upload-artifact@v4
        with:
          name: curl-version
          path: release/version.txt
          retention-days: 90
          if-no-files-found: error
          overwrite: true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: curl-binary-linux-musl-${{ env.VERSION }}
          path: release
          retention-days: 90
          if-no-files-found: error
          overwrite: true
